From: Juergen Gross <jgross@suse.com>
Date: Thu, 06 Aug 2015 08:04:38 (GMT)
Subject: x86/ldt: Correct LDT access in single stepping logic
Git-commit: 136d9d83c07c5e30ac49fc83b27e8c4842f108fc
Patch-mainline: v4.2-rc7
References: bsc#938706, CVE-2015-5157

x86/ldt: Correct LDT access in single stepping logic

Commit 37868fe113ff ("x86/ldt: Make modify_ldt synchronous")
introduced a new struct ldt_struct anchored at mm->context.ldt.

convert_ip_to_linear() was changed to reflect this, but indexing
into the ldt has to be changed as the pointer is no longer void *.

Signed-off-by: Juergen Gross <jgross@suse.com>
Reviewed-by: Andy Lutomirski <luto@kernel.org>
Cc: <stable@vger.kernel.org> # On top of: 37868fe113ff: x86/ldt: Make modify_ldt synchronous
Cc: Linus Torvalds <torvalds@linux-foundation.org>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: bp@suse.de
Link: http://lkml.kernel.org/r/1438848278-12906-1-git-send-email-jgross@suse.com
Signed-off-by: Ingo Molnar <mingo@kernel.org>

---
 arch/x86/kernel/step.c |    9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

--- a/arch/x86/kernel/step.c
+++ b/arch/x86/kernel/step.c
@@ -26,16 +26,17 @@ unsigned long convert_ip_to_linear(struc
 	 */
 	if ((seg & SEGMENT_TI_MASK) == SEGMENT_LDT) {
 		struct desc_struct *desc;
+		struct ldt_struct *ldt;
 		unsigned long base;
 
-		seg &= ~7UL;
+		seg >>= 3;
 
 		mutex_lock(&child->mm->context.lock);
-		if (unlikely(!child->mm->context.ldt ||
-			     (seg >> 3) >= child->mm->context.size))
+		ldt = child->mm->context.ldt;
+		if (unlikely(!ldt || seg >= ldt->size))
 			addr = -1L; /* bogus selector, access would fault */
 		else {
-			desc = child->mm->context.ldt + seg;
+			desc = &ldt->entries[seg];
 			base = get_desc_base(desc);
 
 			/* 16-bit code segment? */
